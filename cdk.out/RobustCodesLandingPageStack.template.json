{
 "Resources": {
  "WebsiteBucket75C24D94": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "robustcodes-landing-235612442908-eu-central-1",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:cb212000",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/WebsiteBucket/Resource"
   }
  },
  "WebsiteBucketPolicyE10E3262": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "WebsiteBucket75C24D94"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebsiteBucket75C24D94",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "WebsiteBucket75C24D94",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Condition": {
        "StringEquals": {
         "AWS:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":cloudfront::",
            {
             "Ref": "AWS::AccountId"
            },
            ":distribution/",
            {
             "Ref": "Distribution830FAC52"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudfront.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "WebsiteBucket75C24D94",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/WebsiteBucket/Policy/Resource"
   }
  },
  "WebsiteBucketAutoDeleteObjectsCustomResource8750E461": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "WebsiteBucket75C24D94"
    }
   },
   "DependsOn": [
    "WebsiteBucketPolicyE10E3262"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/WebsiteBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-235612442908-eu-central-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "WebsiteBucket75C24D94"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "OAC5B452445": {
   "Type": "AWS::CloudFront::OriginAccessControl",
   "Properties": {
    "OriginAccessControlConfig": {
     "Description": "OAC for RobustCodes website",
     "Name": "RobustCodesLandingPageStackOACA9439080",
     "OriginAccessControlOriginType": "s3",
     "SigningBehavior": "always",
     "SigningProtocol": "sigv4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/OAC/Resource"
   }
  },
  "Distribution830FAC52": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CustomErrorResponses": [
      {
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "TargetOriginId": "RobustCodesLandingPageStackDistributionOrigin18967707F",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "WebsiteBucket75C24D94",
         "RegionalDomainName"
        ]
       },
       "Id": "RobustCodesLandingPageStackDistributionOrigin18967707F",
       "OriginAccessControlId": {
        "Fn::GetAtt": [
         "OAC5B452445",
         "Id"
        ]
       },
       "S3OriginConfig": {
        "OriginAccessIdentity": ""
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/Distribution/Resource"
   }
  },
  "ContactFunctionServiceRoleACF19414": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactFunction/ServiceRole/Resource"
   }
  },
  "ContactFunction0F68BFE2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\nconst https = require('https');\n\nexports.handler = async (event) => {\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'Access-Control-Allow-Methods': 'POST, OPTIONS',\n  };\n\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 200,\n      headers,\n      body: '',\n    };\n  }\n\n  try {\n    const body = JSON.parse(event.body);\n    const { name, email, message } = body;\n\n    if (!name || !email || !message) {\n      return {\n        statusCode: 400,\n        headers,\n        body: JSON.stringify({ error: 'Missing required fields' }),\n      };\n    }\n\n    // Prepare email data for your existing Lambda function\n    const emailData = {\n      subject: `New Contact Form Submission from ${name}`,\n      body: `\n        <h3>New Contact Form Submission</h3>\n        <p><strong>Name:</strong> ${name}</p>\n        <p><strong>Email:</strong> ${email}</p>\n        <p><strong>Message:</strong></p>\n        <p>${message.replace(/\\n/g, '<br>')}</p>\n      `,\n      isHtml: true\n    };\n\n    // Call your existing email Lambda function\n    const data = JSON.stringify(emailData);\n    const options = {\n      hostname: 'fntyvwolg2kdtv64ep4bwkasia0cgjwl.lambda-url.eu-central-1.on.aws',\n      path: '/',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Content-Length': data.length,\n        'x-api-key': process.env.X_API_KEY,\n        'x-domain': 'robustcodes.com'\n      }\n    };\n\n    const response = await new Promise((resolve, reject) => {\n      const req = https.request(options, (res) => {\n        let responseData = '';\n        res.on('data', (chunk) => {\n          responseData += chunk;\n        });\n        res.on('end', () => {\n          resolve({\n            statusCode: res.statusCode,\n            data: responseData\n          });\n        });\n      });\n\n      req.on('error', (error) => {\n        reject(error);\n      });\n\n      req.write(data);\n      req.end();\n    });\n\n    if (response.statusCode === 200) {\n      return {\n        statusCode: 200,\n        headers,\n        body: JSON.stringify({ message: 'Message sent successfully!' }),\n      };\n    } else {\n      throw new Error('Failed to send email');\n    }\n\n  } catch (error) {\n    console.error('Error:', error);\n    return {\n      statusCode: 500,\n      headers,\n      body: JSON.stringify({ error: 'Failed to send message' }),\n    };\n  }\n};\n      "
    },
    "Environment": {
     "Variables": {
      "X_API_KEY": "cb64d5fd-1924-4150-9e2c-cfef49fadd3e"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ContactFunctionServiceRoleACF19414",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "ContactFunctionServiceRoleACF19414"
   ],
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactFunction/Resource"
   }
  },
  "ContactApi2DD5FE99": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for handling contact form submissions",
    "Name": "RobustCodes Contact API"
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactApi/Resource"
   }
  },
  "ContactApiDeployment8DA45B1Fe580ea83aa58605bf6761674ef4b9bd8": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for handling contact form submissions",
    "RestApiId": {
     "Ref": "ContactApi2DD5FE99"
    }
   },
   "DependsOn": [
    "ContactApicontactOPTIONSC53D9E3A",
    "ContactApicontactPOSTD507DE90",
    "ContactApicontactC8C71431",
    "ContactApiOPTIONS412E152A"
   ],
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "ContactApiDeploymentStageprodE4E2C75E": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ContactApiDeployment8DA45B1Fe580ea83aa58605bf6761674ef4b9bd8"
    },
    "RestApiId": {
     "Ref": "ContactApi2DD5FE99"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactApi/DeploymentStage.prod/Resource"
   }
  },
  "ContactApiOPTIONS412E152A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "ContactApi2DD5FE99",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "ContactApi2DD5FE99"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactApi/Default/OPTIONS/Resource"
   }
  },
  "ContactApicontactC8C71431": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ContactApi2DD5FE99",
      "RootResourceId"
     ]
    },
    "PathPart": "contact",
    "RestApiId": {
     "Ref": "ContactApi2DD5FE99"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactApi/Default/contact/Resource"
   }
  },
  "ContactApicontactOPTIONSC53D9E3A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ContactApicontactC8C71431"
    },
    "RestApiId": {
     "Ref": "ContactApi2DD5FE99"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactApi/Default/contact/OPTIONS/Resource"
   }
  },
  "ContactApicontactPOSTApiPermissionRobustCodesLandingPageStackContactApi65C18531POSTcontactF02B7A47": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ContactFunction0F68BFE2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-central-1:235612442908:",
       {
        "Ref": "ContactApi2DD5FE99"
       },
       "/",
       {
        "Ref": "ContactApiDeploymentStageprodE4E2C75E"
       },
       "/POST/contact"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactApi/Default/contact/POST/ApiPermission.RobustCodesLandingPageStackContactApi65C18531.POST..contact"
   }
  },
  "ContactApicontactPOSTApiPermissionTestRobustCodesLandingPageStackContactApi65C18531POSTcontactBE024E95": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ContactFunction0F68BFE2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-central-1:235612442908:",
       {
        "Ref": "ContactApi2DD5FE99"
       },
       "/test-invoke-stage/POST/contact"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactApi/Default/contact/POST/ApiPermission.Test.RobustCodesLandingPageStackContactApi65C18531.POST..contact"
   }
  },
  "ContactApicontactPOSTD507DE90": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ContactFunction0F68BFE2",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ContactApicontactC8C71431"
    },
    "RestApiId": {
     "Ref": "ContactApi2DD5FE99"
    }
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/ContactApi/Default/contact/POST/Resource"
   }
  },
  "DeployWebsiteAwsCliLayer17DBC421": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-235612442908-eu-central-1",
     "S3Key": "c49d356cac773d491c5f7ac148995a1181498a8e289429f8612a7f7e3814f535.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/DeployWebsite/AwsCliLayer/Resource",
    "aws:asset:path": "asset.c49d356cac773d491c5f7ac148995a1181498a8e289429f8612a7f7e3814f535.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "DeployWebsiteCustomResourceD116527B": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "cdk-hnb659fds-assets-235612442908-eu-central-1"
    ],
    "SourceObjectKeys": [
     "4fbd5746b9fc5563b848160538278a54b69fd28952e9c970aeb20f05e73ab79e.zip"
    ],
    "DestinationBucketName": {
     "Ref": "WebsiteBucket75C24D94"
    },
    "Prune": true,
    "DistributionId": {
     "Ref": "Distribution830FAC52"
    },
    "DistributionPaths": [
     "/*"
    ],
    "OutputObjectKeys": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/DeployWebsite/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::cdk-hnb659fds-assets-235612442908-eu-central-1",
        "arn:aws:s3:::cdk-hnb659fds-assets-235612442908-eu-central-1/*"
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "WebsiteBucket75C24D94",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "WebsiteBucket75C24D94",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-235612442908-eu-central-1",
     "S3Key": "9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "DeployWebsiteAwsCliLayer17DBC421"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Q0W6DMAz8lr6nWQv7AUq1p02tQNorSoPL3IYExUkRQvz7RKAtm/rkO/t8cS7i0Tbmm5VoaS3L61rhife5E/LKREtFTzHvd15ewbH0rGc0laNRKLtne+YT2QmCgUllfHm2Rjve5/HBYoU6kRKIUqOdNWrcftXeIzmLJ+/Q6FGz5ANToj6VgvcfXsu7YomPYGskmtmn6MB+gw08R10pcOahHxiKmveZUTCKQ33+bEIDEw1WwkErOt5nQC5pMKhnuIdGma4GHVJasNyJKvhOIAMy3koY02Ff4H5MOQ5ndJ/OzgEPjOKiLx+OfIp38YQgAkc8GcswsNSTM/Urq3+jozU3LMGGW8L2eCPq6s8dB+8a7+bECzVGWYiWpEKetJQqDOkOTJsS+IXeblHEt+98s7oQ4tp67bAGnk31F749XrxtAgAA"
   },
   "Metadata": {
    "aws:cdk:path": "RobustCodesLandingPageStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ContactApiEndpoint0B53FAC4": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ContactApi2DD5FE99"
      },
      ".execute-api.eu-central-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ContactApiDeploymentStageprodE4E2C75E"
      },
      "/"
     ]
    ]
   }
  },
  "WebsiteURL": {
   "Description": "Website URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "Distribution830FAC52",
        "DomainName"
       ]
      }
     ]
    ]
   }
  },
  "ApiEndpoint": {
   "Description": "API Gateway endpoint",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ContactApi2DD5FE99"
      },
      ".execute-api.eu-central-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ContactApiDeploymentStageprodE4E2C75E"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}